{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Get Current Date/Time",
      "type": "shell",
      "command": "${workspaceFolder}/scripts/get_current_datetime.sh",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Full Project Setup",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Python: Setup Environment",
        "Python: Install Dependencies",
        "TypeScript: Build"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Web Development Environment",
      "dependsOrder": "sequence",
      "dependsOn": ["Start Web Dev Server"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated"
      },
      "isBackground": true,
      "problemMatcher": {
        "base": "$tsc-watch",
        "background": {
          "activeOnStart": true,
          "beginsPattern": "^.*compiled.*$",
          "endsPattern": "^.*Local:.*http://localhost.*$"
        }
      }
    },
    {
      "label": "Web Quality Check",
      "dependsOrder": "parallel",
      "dependsOn": ["Web: Lint", "Web: Format", "Web: Test"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated"
      }
    },
    {
      "label": "Browser Error Monitor",
      "type": "shell",
      "command": "${workspaceFolder}/scripts/browser-error-monitor.sh",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "browser-monitor",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "source": "Browser Monitor",
        "pattern": {
          "regexp": "^ERROR\\s+(.*)\\s+at\\s+(.*):(\\d+):(\\d+)$",
          "message": 1,
          "file": 2,
          "line": 3,
          "column": 4
        }
      }
    },
    {
      "label": "Check Next.js Console Errors",
      "type": "shell",
      "command": "${workspaceFolder}/scripts/browser-error-monitor.sh",
      "args": ["--console-only"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "console-errors",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "source": "Browser Console",
        "pattern": {
          "regexp": "^CONSOLE\\s+(ERROR|WARN|INFO)\\s+(.*)\\s+at\\s+(.*):(\\d+):(\\d+)$",
          "severity": 1,
          "message": 2,
          "file": 3,
          "line": 4,
          "column": 5
        }
      }
    },
    {
      "label": "Lighthouse CI Analysis",
      "type": "shell",
      "command": "npx",
      "args": [
        "lighthouse",
        "http://localhost:3000",
        "--output=json",
        "--output-path=./lighthouse-report.json",
        "--chrome-flags=\"--headless\""
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "lighthouse",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "source": "Lighthouse",
        "severity": "warning",
        "pattern": {
          "regexp": "^.*?(error|warning|info).*?:\\s+(.*)$",
          "severity": 1,
          "message": 2
        }
      }
    },
    {
      "label": "Webhint Analysis",
      "type": "shell",
      "command": "npx",
      "args": ["hint", "http://localhost:3000", "--format=json"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "webhint",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "source": "webhint",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+)\\s+(error|warning|hint)\\s+(.*)\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5,
          "code": 6
        }
      }
    },
    {
      "label": "Complete Browser Error Check",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Browser Error Monitor",
        "Check Next.js Console Errors",
        "Webhint Analysis"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Development Quality Suite",
      "dependsOrder": "parallel",
      "dependsOn": ["Web Quality Check", "Complete Browser Error Check"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Make Scripts Executable",
      "type": "shell",
      "command": "chmod",
      "args": ["+x", "${workspaceFolder}/scripts/*.sh"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "tsc: build - tsconfig.json",
      "type": "shell",
      "command": "npx",
      "args": ["tsc", "-p", "tsconfig.json"],
      "group": {
        "kind": "build",
        "isDefault": false
      },
      "problemMatcher": "$tsc"
    },
    {
      "label": "Run SDK Playground (main.ts)",
      "type": "shell",
      "command": "node",
      "args": ["./lib/src/main.js"],
      "group": "test",
      "dependsOn": ["tsc: build - tsconfig.json"],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "Open SDK Playground (main.ts)",
      "type": "shell",
      "command": "code",
      "args": ["${workspaceFolder}/src/main.ts"],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    }
    // --- End TypeScript/Node.js SDK Playground Optimized Tasks ---
  ]
}
