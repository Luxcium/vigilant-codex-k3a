version: '3.8'

services:
  python-dev:
    build:
      context: .
      target: development
    container_name: vigilant-codex-python-dev
    volumes:
      - .:/app
      - jupyter-data:/home/appuser/.jupyter
      - python-cache:/home/appuser/.cache
    ports:
      - '8888:8888' # Jupyter Lab
      - '8000:8000' # FastAPI
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=vigilant-codex-dev
    env_file:
      - .env
    networks:
      - vigilant-codex
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8888/lab/api/status']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  python-prod:
    build:
      context: .
      target: production
    container_name: vigilant-codex-python-prod
    ports:
      - '8001:8000' # FastAPI production
    env_file:
      - .env
    environment:
      - ENVIRONMENT=production
    networks:
      - vigilant-codex
    restart: unless-stopped
    profiles:
      - production

  postgres:
    image: postgres:15-alpine
    container_name: vigilant-codex-postgres
    environment:
      POSTGRES_DB: vigilant_codex
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - vigilant-codex
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: vigilant-codex-redis
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    networks:
      - vigilant-codex
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  jupyter-data:
    driver: local
  python-cache:
    driver: local

networks:
  vigilant-codex:
    driver: bridge
