#!/usr/bin/env bash
## =============================================================================
#? Script Name: install-hooks.sh
#? Aim: Install local Git hooks enforcing validation before commits/pushes
#? Purpose: Provide zero-cost local enforcement replacing remote CI
#? Decision Rationale: Ensure all validations pass; allow explicit override via env var
#? Usage: ./scripts/install-hooks.sh
#? Dependencies: bash, git
#? Last Updated: 2025-08-08 by GitHub Copilot
#? References: local-ci.sh, commit-guard.sh
## =============================================================================
set -euo pipefail

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
HOOKS_DIR="$ROOT_DIR/.git/hooks"

if [ ! -d "$ROOT_DIR/.git" ]; then
  echo "[install-hooks] Not a git repository: $ROOT_DIR" >&2
  exit 1
fi

mkdir -p "$HOOKS_DIR"

install_hook(){
  local name="$1"; shift
  local target="$HOOKS_DIR/$name"
  cat >"$target" <<'EOF'
#!/usr/bin/env bash
# Auto-generated by install-hooks.sh
# Executes commit-guard for validation unless override requested
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)/scripts"
if [ "${DISABLE_LOCAL_GUARDS:-0}" = "1" ]; then
  echo "[hook] Guard disabled via DISABLE_LOCAL_GUARDS=1"
  exit 0
fi
bash "$SCRIPT_DIR/commit-guard.sh" --stage "$0" || exit 1
EOF
  chmod +x "$target"
  echo "Installed hook: $name"
}

install_hook pre-commit
install_hook pre-push
install_hook commit-msg

echo "All hooks installed. Use DISABLE_LOCAL_GUARDS=1 to bypass (audited)."

#? Validation Status: Actively Validated on 2025-08-08
